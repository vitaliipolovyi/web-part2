version: '3.8'
services:
  node-app:
    build:
      context: .
      dockerfile: ./docker/node/Dockerfile
    image: nodejs
    container_name: l10nodejs
    depends_on:
      - app-database
    restart: on-failure
    ports:
      - '$PORT:$PORT'
    environment:
      - HOST=$HOST
      - PORT=$PORT
      - DB_HOST=$DBHOST
      - DB_NAME=$DBNAME
      - DB_USER=$DBUSER
      - DB_PASSWORD=$DBPWD
      - DB_PORT=$DBPORT
    volumes:
      - .:/home/node/app
      - /home/node/app/node_modules
    networks:
      - l10net
  app-database:
    image: mongo
    container_name: l10db
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$DBROOTUSER
      - MONGO_INITDB_ROOT_PASSWORD=$DBROOTPWD
      - MONGO_INITDB_DATABASE=$DBNAME
      - MONGO_INITDB_USERNAME=$DBUSER
      - MONGO_INITDB_PASSWORD=$DBPWD
      - RABBITMQ_USERNAME=$RABBITMQ_USERNAME
      - RABBITMQ_PASSWORD=$RABBITMQ_PASSWORD
      - RABBITMQ_PORT=$RABBITMQ_PORT
      - RABBITMQ_HOST=$RABBITMQ_HOST
    ports:
      - $DBPORT:$DBPORT
    volumes:
      - db:/data/db
      - ./docker/mongodb/entrypoint/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - l10net
  app-messages-queue:
    image: rabbitmq:management
    container_name: l10amq
    environment:
      #- RABBITMQ_VHOST=$RABBITMQ_VHOST
      - RABBITMQ_DEFAULT_USERNAME=$RABBITMQ_USERNAME
      - RABBITMQ_DEFAULT_PASSWORD=$RABBITMQ_PASSWORD
    ports:
      - '$RABBITMQ_PORT:$RABBITMQ_PORT'
      - '$RABBITMQ_DASHBOARD_PORT:$RABBITMQ_DASHBOARD_PORT'
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - l10net
volumes:
  db:
  rabbitmq_data:

networks:
  l10net:
    name: l10net
    driver: bridge
